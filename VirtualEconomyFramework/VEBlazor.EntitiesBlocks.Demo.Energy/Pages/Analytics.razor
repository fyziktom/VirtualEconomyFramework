@page "/analytics"
@using VEFramework.VEBlazor.EntitiesBlocks.Analytics
@inject AppData AppData
@inject HttpClient Http

<Calculation RootItemId="@rootItemId" />

@code {
    protected override async Task OnInitializedAsync()
    {
        AppData.RootItemId = "7b27c442-ad40-4679-b6d5-8873d9763996";
        AppData.RootItemName = "network";
        var storeddata = await Http.GetStringAsync("sampledata.json");
        if (storeddata != null)
            AppData.StoredConfig = storeddata;

        var res = AppData.EntitiesHandler.LoadFromConfig(AppData.StoredConfig);
        if (res.Item1)
        {
            rootItemId = AppData.RootItemId;
        }

        if (!AppData.BatteryStorageSimulatorLoaded)
        {
            var storagedata = await Http.GetStringAsync("samplestorage.json");
            if (storagedata != null)
                AppData.StoredBatteryStorageConfig = storagedata;

            if (storagedata != null && !AppData.BatteryStorage.ImportConfig(storagedata).Item1)
            {
                setCommonBattery();
                AppData.BatteryStorage.AddBatteryBlock(AppData.BatteryStorage.CommonBattery).ToList();
                AppData.BatteryStorage.AddBatteryBlock(AppData.BatteryStorage.CommonBattery).ToList();

                AppData.BatteryStorageSimulatorLoaded = true;
            }

        }

        if (!AppData.PVESimulatorLoaded)
        {
            storeddata = await Http.GetStringAsync("samplepve.json");
            if (storeddata != null)
                AppData.StoredPVEConfig = storeddata;

            if (storeddata != null)
                AppData.PVEGrid.ImportConfig(storeddata);

            AppData.PVESimulatorLoaded = true;
            await InvokeAsync(StateHasChanged);
            await Task.Delay(1);
        }
        
        await base.OnInitializedAsync();
    }


    private void setCommonBattery()
    {
        AppData.BatteryStorage.SetCommonBattery(new BatteryBlock()
            {
                Id = Guid.NewGuid().ToString(),
                Capacity = 10000,
                InternalResistance = 0.1,
                MaximumChargePower = 2000,
                MaximumDischargePower = 2000
            });
    }

    private string rootItemId;
}