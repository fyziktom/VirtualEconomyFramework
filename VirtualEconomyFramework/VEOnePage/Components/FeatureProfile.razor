   
 @using VEDriversLite.NFT.Coruzant
@inject AppData AppData 
  
  @foreach (var profile in AppData.NFTs.Skip(skip))
  {
      if (profile.Type == VEDriversLite.NFT.NFTTypes.CoruzantProfile)
      {
        var prof = profile as CoruzantProfileNFT;              
        <fieldset id="weeks-feature">
                <h2>WEEK'S FEATURE</h2>
                <div class="row">
                    <div class="col-sm-12 col-md-4">
                        <span id="week-img">
                            <img src="@prof.ImageLink" />
                        </span>
                    </div>

                    <div class="col-sm-12 col-md-8">
                        <span class="name"> @prof.Name @prof.Surname</span><br />
                        <span class="company">
                            @((MarkupString)prof.WorkingPosition),
                            <br/> @((MarkupString)prof.CompanyName)
                        </span>
                        <div class="text">
                            @((MarkupString)prof.Text)
                        </div>

                        <span class="profile-link">View Profile</span>

                    </div>

                </div>
        <div class="profile-modal">
           <div class="row row-eq-height content-modal">
            <div class="col-xs-12 col-sm-4 profile-meta ">
                <span id="week-img">
                    <img src="@prof.ImageLink" />
                </span>
                <span class="name"> @prof.Name @prof.Surname</span><br /><br />
                <span class="position">@prof.WorkingPosition</span><br /><br />
                <span class="tags"> <b>Tags: </b>
                    @if (@prof.Tags !="")
                    {
                        string[] subs = @prof.Tags.Split();

                        foreach (string sub in subs)
                        {
                            if (sub != "")
                            {
                                string r = "<a href='#'> "+sub+" </a>, ";
                                @((MarkupString)r);
                            }
                        }
                    }

                </span><br />
            </div>

            <div class="col-xs-12 col-sm-8 text">

                <span class="title-modal"> @prof.Description</span><br />
                <div class="long-desc">
                    @((MarkupString)prof.Text)
                </div>
                <span class="comp-link"><a target = "_blank" href="@prof.CompanyLink">More about @((MarkupString)@prof.CompanyName)</a></span><br />
            </div>

          </div>
          </div>
            </fieldset>

          break;
        }
  }


@code {
    int skip = new Random().Next(4, 17);
    protected override Task OnInitializedAsync()
    {
        AppData.NFTsLoaded += NFTsLoadedHandler;
        return base.OnInitializedAsync();
    }
    public void NFTsLoadedHandler(object sender, EventArgs e)
    {
        StateHasChanged();
    }
}










