@using VEDriversLite.NFT.Coruzant 
@inject AppData AppData 
@inject IJSRuntime JsRuntime
<div class="row profiles">
    
    @foreach (var profile in AppData.NFTs.Skip(3).Take(8))
    {
        if (profile.Type == VEDriversLite.NFT.NFTTypes.CoruzantProfile)
        {
            var prof = profile as CoruzantProfileNFT;
            <div class="col-xs-6 col-sm-4 col-md-3  profiles-container">
                <div class="profile">
                   <div class="profile-img">
                    <img class="media-img" src="@prof.ImageLink" alt="@profile.Description">
                    </div>        
                    <div class="profile-details">
                        <span class="profile-name">@prof.Name @prof.Surname</span> <br>
                        <span class="position">@prof.WorkingPosition</span> <br>
                        <span class="desc">@prof.Description</span>

                    </div>
                </div>
               <div class="profile-modal">
                 <div class="row row-eq-height content-modal">
                    <div class="col-xs-12 col-sm-4 profile-meta ">
                        <span id="week-img">
                            <img src="@prof.ImageLink" />
                        </span>
                        <span class="name"> @prof.Name @prof.Surname</span><br /><br />
                        <span class="position">@prof.WorkingPosition</span><br /><br />
                        <span class="tags"> <b>Tags: </b>
                            @if (@prof.Tags !="")
                            {
                                string[] subs = @prof.Tags.Split();

                                foreach (string sub in subs)
                                {
                                    if (sub != "")
                                    {
                                        string r = "<a href='#'> "+sub+" </a>, ";
                                        @((MarkupString)r);
                                    }
                                }
                            }

                        </span><br />
                    </div>

                    <div class="col-xs-12 col-sm-8 text">

                        <span class="title-modal"> @prof.Description</span><br />
                        <div class="long-desc">
                            @((MarkupString)prof.Text)
                        </div>
                        <span class="comp-link"><a target = "_blank" href="@prof.CompanyLink">More about @((MarkupString)@prof.CompanyName)</a></span><br />
                    </div>

                     </div>
             </div>
          </div>

    }
 
      }

</div>



@code {


    int count = 0;
    protected override Task OnInitializedAsync()
    {
        AppData.NFTsLoaded += NFTsLoadedHandler;
        return base.OnInitializedAsync();
    }
    public void NFTsLoadedHandler(object sender, EventArgs e)
    {
        StateHasChanged();
    }
    }

