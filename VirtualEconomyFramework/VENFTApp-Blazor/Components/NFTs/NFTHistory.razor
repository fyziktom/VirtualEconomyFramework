@using VEDriversLite.NFT
@inject AppData AppData

<div class="row">
    <div class="col">
        <div class="row" style="margin-top:20px;">
            <div class="col d-flex justify-content-center align-items-center">
                @if (!IsMessageHistory)
                {
                <button class="btn btn-primary" @onclick="LoadNFTHistory"><i class="oi oi-timer"></i> Load NFT History</button>
                }
                else
                {
                <button class="btn btn-primary" @onclick="LoadNFTHistory"><i class="oi oi-timer"></i> Load Message History</button>
                }
            </div>
        </div>
        <div class="row" style="margin-top:20px;">
            <div class="col d-flex justify-content-center align-items-center">
                <VENFTApp_Blazor.Components.Spin Tip="Loading History..." Spinning="@loadingNFTHistory">
                    @if (nftInDetailsHistory != null)
                    {
                        @if (nftInDetailsHistory.Count > 0)
                        {
                            <table class="table table-striped" style="max-width:350px;">
                                <thead>
                                    <tr>
                                        @if (IsMessageHistory)
                                        {
                                            <th style="min-width:50px;">Dir </th>
                                        }
                                        <th style="min-width:50px;">Name </th>
                                        <th style="min-width:50px;">Description </th>
                                        @if (!IsMessageHistory)
                                        {
                                            <th style="min-width:50px;">Image</th>
                                        }
                                        else
                                        {
                                            <th style="min-width:50px;">Details</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (nftInDetailsHistory != null)
                                    {
                                        @if (nftInDetailsHistory.Count > 0)
                                        {
                                            @foreach (var nft in nftInDetailsHistory)
                                            {
                                    <tr>
                                        @if (IsMessageHistory)
                                        {
                                            @if ((nft as MessageNFT).IsReceivedMessage)
                                            {
                                                <td style="min-width:70px;"><span class="badge badge-primary">Received</span></td>
                                            }
                                            else
                                            {
                                                <td style="min-width:70px;"><span class="badge badge-success">Sent</span></td>
                                            }
                                        }
                                        @if (nft.Name.Length > 30)
                                        {
                                            <td style="min-width:70px;">@nft.Name.Substring(0, 29) ... </td>
                                        }
                                        else
                                        {
                                            <td style="min-width:70px;">@nft.Name </td>
                                        }
                                        @if (nft.Description.Length > 160)
                                        {
                                            <td>@nft.Description.Substring(0, 159) ...</td>
                                        }
                                        else
                                        {
                                            <td>@nft.Description</td>
                                        }
                                        @switch (NftType)
                                        {
                                            case NFTTypes.Image:
                                                <td>
                                                    <a @onclick="async () => await nftHistoryDetailsOpen(nft)" target="_blank">
                                                        <img src="@nft.ImageLink" style="min-height:50px; max-height:100px; width:auto; min-width:20px;max-width:50px;" />
                                                    </a>
                                                </td>
                                                break;
                                            case NFTTypes.Post:
                                                <td>
                                                    <a @onclick="async () => await nftHistoryDetailsOpen(nft)" target="_blank">
                                                        <img src="@nft.ImageLink" style="min-height:50px; max-height:100px; width:auto; min-width:20px;max-width:50px;" />
                                                    </a>
                                                </td>
                                                break;
                                            case NFTTypes.Ticket:
                                                <td>
                                                    <a @onclick="async () => await nftHistoryDetailsOpen(nft)" target="_blank">
                                                        <img src="@nft.ImageLink" style="min-height:50px; max-height:100px; width:auto; min-width:20px;max-width:50px;" />
                                                    </a>
                                                </td>
                                                break;
                                            case NFTTypes.Event:
                                                <td>
                                                    <a @onclick="async () => await nftHistoryDetailsOpen(nft)" target="_blank">
                                                        <img src="@nft.ImageLink" style="min-height:50px; max-height:100px; width:auto; min-width:20px;max-width:50px;" />
                                                    </a>
                                                </td>
                                                break;
                                            case NFTTypes.CoruzantArticle:
                                                <td>
                                                    <a @onclick="async () => await nftHistoryDetailsOpen(nft)" target="_blank">
                                                        <img src="@nft.ImageLink" style="min-height:50px; max-height:100px; width:auto; min-width:20px;max-width:50px;" />
                                                    </a>
                                                </td>
                                                break;
                                            case NFTTypes.Music:
                                                <td>
                                                    <a @onclick="async () => await nftHistoryDetailsOpen(nft)" target="_blank">
                                                        <i class="oi oi-musical-note"></i>
                                                    </a>
                                                </td>
                                                break;
                                            case NFTTypes.Message:
                                                <td>
                                                    <a @onclick="async () => await nftHistoryDetailsOpen(nft)" target="_blank" class="text-center">
                                                        <i class="oi oi-envelope-open"></i>
                                                    </a>
                                                </td>
                                                break;
                                         }
                                        </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="4">History Not Loaded</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                        }
                        else
                        {
                            <div style="min-width:100px; min-height:50px;">History Not Loaded</div>
                        }
                    }
                </VENFTApp_Blazor.Components.Spin>
            </div>
        </div>
    </div>
</div>

<Modal Title="NFT History Detail"
       Visible="@nftHistoryDetailsVisible"
       OnCancel="@nftHistoryDetailsClose"
       Footer="null">
    <div class="row">
        <div class="col d-flex justify-content-center align-items-center" style="260px;">
            @if (!IsMessageHistory)
            {
                <NFT InputNFT="@selectedHistoryNFT" Address="" OwnNFT="false" HideButtons="true" />
            }
            else
            {
                <VENFTApp_Blazor.Components.NFTs.Messages.NFTMessage Utxo="@selectedHistoryNFT.Utxo" InputNFT="@selectedHistoryNFT" IsHistory="true" />
            }
        </div>
    </div>
</Modal>

@code {

    private string _utxo = string.Empty;
    [Parameter]
    public string Utxo
    {
        get => _utxo;
        set
        {
            if (!string.IsNullOrEmpty(value))
            {
                if (value != lastutxo)
                {
                    nftInDetailsHistory = new List<INFT>();
                    lastutxo = value;
                }

                if (_utxo != value)
                {
                    _utxo = value;
                }
            }
        }
    }

    [Parameter]
    public bool IsMessageHistory { get; set; } = false;

    [Parameter]
    public NFTTypes NftType { get; set; } = NFTTypes.Image;

    private bool nftHistoryDetailsVisible = false;
    private bool loadingNFTHistory = false;
    private string lastutxo = string.Empty;
    
    private List<INFT> nftInDetailsHistory = new List<INFT>();
    private INFT selectedHistoryNFT = new ImageNFT("");

    private async Task LoadNFTHistory()
    {
        loadingNFTHistory = true;
        StateHasChanged();
        nftInDetailsHistory = await NFTHelpers.LoadNFTsHistory(_utxo);
        if (IsMessageHistory)
            await DecryptMessages();
        loadingNFTHistory = false;
        StateHasChanged();
    }

    private async Task DecryptMessages()
    {
        foreach (var m in nftInDetailsHistory)
            if (m.Type == NFTTypes.Message)
                await (m as MessageNFT).Decrypt(AppData.Account.Secret);
        StateHasChanged();
    }

    private async Task nftHistoryDetailsOpen(INFT nft)
    {
        selectedHistoryNFT = await NFTFactory.CloneNFT(nft);
        nftHistoryDetailsVisible = true;
        StateHasChanged();
    }

    private async Task nftHistoryDetailsClose(MouseEventArgs e)
    {
        nftHistoryDetailsVisible = false;
        StateHasChanged();
    }

}
