@using VEDriversLite.NFT
@using Markdig
@inject AppData AppData

<div class="row">
    <div class="col">
        <div class="row" style="margin-top:10px;">
            <div class="col d-flex justify-content-center align-items-center">
                <h6>@NFT.Name</h6>
            </div>
        </div>
        <div class="row">
            <div class="col d-flex justify-content-center align-items-center">
                <small>@((NFT as OrderNFT).SellerProfileNFT)</small>
            </div>
        </div>

        @if (Items.Count > 0)
        {
            <div class="row" style="margin-top:10px;">
                <div class="col d-flex justify-content-center align-items-center">
                    <span>Items</span>
                </div>
            </div>
            @foreach (var item in Items)
            {
                <div class="row">
                    <div class="col d-flex justify-content-center align-items-center">
                        <span>Name: @item.InvoiceProductNFT.Name</span>
                    </div>
                    <div class="col d-flex justify-content-center align-items-center">
                        <VENFTApp_Blazor.Components.NFTs.Payments.ShowNFTProductOnInvoiceDetails InputNFT="@item.InvoiceProductNFT" DisplayButton="true" />
                    </div>
                    <div class="col d-flex justify-content-center align-items-center">
                        <span>Unit Price: $ @item.ItemPrice</span>
                    </div>
                    <div class="col d-flex justify-content-center align-items-center">
                        <span>Count: @item.ItemCount</span>
                    </div>
                    <div class="col d-flex justify-content-center align-items-center">
                        <span>Total: $ @(item.ItemPrice * item.ItemCount)</span>
                    </div>
                </div>
            }
            <div class="row" style="margin-top:15px;">
                <div class="col d-flex justify-content-center align-items-center">
                    <span>Total Price: $ @((NFT as OrderNFT).TotalPrice)</span>
                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty((NFT as OrderNFT).FileLink))
        {
            <div class="row" style="margin-top:10px;">
                <div class="col d-flex justify-content-center align-items-center">
                    <span>Attached File Link</span>
                </div>
            </div>
            <div class="row">
                <div class="col d-flex justify-content-center align-items-center">
                    <a href="@((NFT as OrderNFT).FileLink)" target="_blank">Click to explore the File for Invoice</a>
                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty((NFT as OrderNFT).ApprovedByProfile))
        {
            <div class="row" style="margin-top:10px;">
                <div class="col d-flex justify-content-center align-items-center">
                    <span>This Order has been already approved.</span>
                </div>
            </div>
            <div class="row">
                <div class="col d-flex justify-content-center align-items-center">
                    <a href="https://explorer.nebl.io/tx/@((NFT as OrderNFT).ApprovedByProfile)" target="_blank">Profile in explorer</a>
                </div>
            </div>
            @if (!string.IsNullOrEmpty((NFT as OrderNFT).ApprovedNote))
            {
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex justify-content-center align-items-center">
                        <span>@((NFT as OrderNFT).ApprovedNote)</span>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="row" style="margin-top:10px;">
                <div class="col d-flex justify-content-center align-items-center">
                    <span>This Order must be approved.</span>
                </div>
            </div>
            <div class="row" style="margin-top:10px;">
                <div class="col">
                    <VENFTApp_Blazor.Components.NFTs.Payments.ApproveOrder InputNFT="@NFT"
                                                                           Address="@Address"
                                                                           OwnNFT="@OwnNFT"
                                                                           DisplayButton="@true"
                                                                           SubAccount="@SubAccount"
                                                                           ProfileUtxo="@ProfileUtxo"
                                                                           NFTSent="@NFTSent" />
                </div>
            </div>
        }

        @if ((NFT as OrderNFT).AlreadyPaid)
        {
            <div class="row" style="margin-top:10px;">
                <div class="col d-flex justify-content-center align-items-center">
                    <span>This Order has been already paid.</span>
                </div>
            </div>
            <div class="row">
                <div class="col d-flex justify-content-center align-items-center">
                    <a href="https://explorer.nebl.io/tx/@((NFT as OrderNFT).OriginalPaymentTxId)" target="_blank">Payment transaction in explorer</a>
                </div>
            </div>
        }
        <hr />

    </div>
</div>

@code {

    private INFT NFT { get; set; } = new OrderNFT("");
    [Parameter]
    public INFT InputNFT
    {
        get => NFT;
        set
        {
            if (value != null && value.Utxo != NFT.Utxo && value.Type == NFTTypes.Order)
            {
                NFT = value;
                LoadItems();
                StateHasChanged();
            }
        }
    }

    [Parameter]
    public bool OwnNFT { get; set; } = false;

    [Parameter]
    public bool SubAccount { get; set; } = false;

    [Parameter]
    public string Address { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<string> NFTSent { get; set; }

    public string NFTmarkuptext => Markdown.ToHtml(NFT.Text);
    public string NFTDescriptionMarkuptext => Markdown.ToHtml(NFT.Description);
    public List<InvoiceItem> Items = new List<InvoiceItem>();

    private string ProfileUtxo = string.Empty;

    private async Task LoadProfileUtxo()
    {
        if (SubAccount)
        {
            if (AppData.Account.SubAccounts.TryGetValue(Address, out var sa))
                if (!string.IsNullOrEmpty(sa.Profile.Utxo))
                    ProfileUtxo = sa.Profile.Utxo;
        }
        else
        {
            if (!string.IsNullOrEmpty(AppData.Account.Profile.Utxo))
                ProfileUtxo = AppData.Account.Profile.Utxo;
        }
    }
    private async Task LoadItems()
    {

        await LoadProfileUtxo();
        Items = (NFT as OrderNFT).InvoiceItems;
        if (Items != null)
        {
            Items.ForEach(async (item) =>
            {
                var nft = await NFTFactory.GetNFT(NFT.TokenId, item.ItemUtxo, item.ItemUtxoIndex, 0, true);
                if (nft != null && nft.Type == NFTTypes.Product)
                {
                    item.InvoiceProductNFT = nft as ProductNFT;
                }
            });
            StateHasChanged();
        }
    }

}
