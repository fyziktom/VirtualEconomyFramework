@using VEDriversLite.NFT
@using VEBlazor.Components.NFTs.EventsAndTickets
@using VEBlazor.Components.Minting
@inject AppData AppData

@page "/addnewevent"

<PageTitle>@AppData.AppName - @headerLabel</PageTitle>

<VEBlazor.Components.PageHeader Title="@headerLabel" BreadcrumbItems="@(new string[] { AppData.AppNick, headerLabel })" />

<VEBlazor.Pages.AddNew MintingPageName="@formName" 
                       @bind-NFT="@AppData.GetMintingNFTTab(formName).NFT" 
                       @bind-Addresses="@AppData.GetMintingNFTTab(formName).Addresses"
                       NFTType="@NFTTypes.Event" 
                       Address="@AppData.Account.Address" 
                       OnLoadNFTTemplate="@onLoadNFTTemplateHandler" 
                       @bind-ConsoleOutFromMinting="@AppData.GetMintingNFTTab(formName).ConsoleOutFromMinting" >
    <SpecificParamsStepHeader>
        Event
    </SpecificParamsStepHeader>
    <SpecificParamsStepContent>
    @if (AppData.GetMintingNFTTabNFT(formName).Type == NFTTypes.Event)
    {   
                <EventSpecificMintForm @bind-Location="@((AppData.GetMintingNFTTab(formName).NFT as EventNFT).Location)"
                                        @bind-LocationCords="@((AppData.GetMintingNFTTab(formName).NFT as EventNFT).LocationCoordinates)"
                                        @bind-AuthorLink="@((AppData.GetMintingNFTTab(formName).NFT as EventNFT).AuthorLink)"
                                        @bind-EventClass="@((AppData.GetMintingNFTTab(formName).NFT as EventNFT).EventClass)"
                                        @bind-EventDate="@((AppData.GetMintingNFTTab(formName).NFT as EventNFT).EventDate)" />
    }
    </SpecificParamsStepContent>
</VEBlazor.Pages.AddNew>

@code {
    string formName = "eventminting";
    string headerLabel = "Add New";
    protected override void OnInitialized()
    {
        headerLabel = AppData.GetMintingNFTTab(formName).HeaderLabel;
        base.OnInitialized();
    }
    async Task onLoadNFTTemplateHandler(INFT nft)
    {
        if (nft != null && AppData.GetMintingNFTTabNFT(formName) != null && AppData.GetMintingNFTTabNFT(formName).Type == NFTTypes.Event)
        {
            await (AppData.GetMintingNFTTabNFT(formName) as EventNFT).Fill(nft);
            StateHasChanged();
        }
    }
}