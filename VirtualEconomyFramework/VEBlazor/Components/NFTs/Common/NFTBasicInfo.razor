@using VEDriversLite.NFT
@using VEDriversLite.NFT.Dto
@inject AppData AppData
@inherits NFTComponentBase

<Card Margin="Margin.Is4.FromBottom">
    <CardBody>
        <CardTitle Size="5">Basic Info</CardTitle>
         
        @if (NFT.DataItems != null && NFT.DataItems.Count > 0)
        {
            <Row Margin="Margin.Is2.FromBottom" Border="Border.Is1.Primary" Flex="Flex.JustifyContent.Center">                               
                @foreach (var item in NFT.DataItems)
                {
                    <Column Flex="Flex.JustifyContent.Center">
                        <Card Style="max-width:50px; min-width:50px; width:50px;" Margin="Margin.Is1.FromEnd" >
                            <CardImage Border="@(item.IsMain ? Border.Is2.Success : Border.Is0)" 
                                        Source="@(NFTHelpers.GetIPFSLinkFromHash(item.Hash))" 
                                        @onclick="() => DisplayItem(item)" 
                                        Style="max-width:40px; min-width:25px; min-height:25px; max-height:80px;"/>                                         
                        </Card> 
                    </Column>
                }
            </Row>
        }
        <Row Border="Border.Is1.Primary">
            <Column> 
                <PanzoomImage Source="@actualImageLink" /> 
            </Column> 
        </Row> 
        <CardText Margin="Margin.Is2.FromTop">
            @NFT.Description
        </CardText>
        <Row Margin="Margin.Is2.FromTop" Flex="Flex.AlignContent.Center">
            <Column>
                <Tags NFTType="@NFT.Type" TagsList="@NFT.TagsList" TokenId="@NFT.TokenId" />
            </Column>
        </Row>
        @if (!string.IsNullOrEmpty(NFT.Utxo))
        {
            <Row Margin="Margin.Is2.FromTop"> 
                <Column> 
                    <CopyButton TextToCopy="@($"{AppData.AppShareNFTUrl}/gallery?utxo={NFT.Utxo}:{NFT.UtxoIndex}")" ButtonText="Copy Share Link" /> 
                </Column> 
            </Row>
        }
    </CardBody>
</Card>
              
                
@code {
    public string actualImageLink 
    {
        get 
        {
            if (NFT.DataItems != null && NFT.DataItems.Count >= 0)
            {
                foreach (var item in NFT.DataItems)
                {
                    if (item.IsMain)
                        return NFTHelpers.GetIPFSLinkFromHash(item.Hash);
                }
            }
            return GetImageUrl();
        }
    }

    void DisplayItem(NFTDataItem item)
    {
        foreach (var i in NFT.DataItems)
            i.IsMain = false;

        item.IsMain = true;
        NFT.ImageLink = NFTHelpers.GetIPFSLinkFromHash(item.Hash);            
        StateHasChanged();
    }  
}                