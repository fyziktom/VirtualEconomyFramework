@using VEFramework.Demo.PublishingDisplay.Models
@using VEFramework.Demo.PublishingDisplay.Services.NFTs
@using VEFramework.Demo.PublishingDisplay.Services.NFTs.Coruzant
@using Markdig
@inject AppData AppData

<Row Flex="Flex.AlignItems.Center">
    <Column Flex="Flex.JustifyContent.Center">
        <Heading Size="HeadingSize.Is3" Style="text-decoration: underline;">Profile Of the Day</Heading>
    </Column>
</Row>
<Row Class="profileofthedaybox" Margin="Margin.Is2.FromTop">
    <Column ColumnSize="ColumnSize.Is12.OnMobile.Is12.OnTablet.Is4.OnDesktop" Padding="Padding.Is2">
        <Row>
            <Column Flex="Flex.JustifyContent.Center.AlignItems.Center">
                <Image Source="@profile.ImageLink" />
            </Column>
        </Row>
        <Row>
            <Column Flex="Flex.JustifyContent.Center">
                <Span TextColor="TextColor.Dark">@(profile.Name + " " + (profile as CoruzantProfileNFT).Surname)</Span>
            </Column>
        </Row>
        <Row>
            <Column Flex="Flex.JustifyContent.Center">
                <Small TextColor="TextColor.Secondary">@((profile as CoruzantProfileNFT).WorkingPosition)</Small>
            </Column>
        </Row>
    </Column>
    <Column ColumnSize="ColumnSize.Is12.OnMobile.Is12.OnTablet.Is8.OnDesktop" Flex="Flex.AlignItems.Center">
        <Div>
            <Row Margin="Margin.Is2.FromTop">
                <Column>
                        <Span Class="text-wrap">
                            @((MarkupString)NFTTextMarkuptext)
                        </Span>         
                </Column>
            </Row>
            <Row Margin="Margin.Is3.FromTop.Is2.FromBottom">
                <Column>
                    @foreach(var tag in profile.TagsList)
                    {                    
                        <Badge Color="Color.Secondary" Margin="Margin.Is2.FromEnd">#@tag</Badge>
                    }
                </Column>
            </Row>
        </Div>
    </Column>
</Row>

@code {

    public INFT profile = new CoruzantProfileNFT("");
    public string NFTTextMarkuptext => Markdig.Markdown.ToHtml( profile.Text , new MarkdownPipelineBuilder().UseAdvancedExtensions().Build());

    protected override void OnInitialized()
    {
        base.OnInitialized();
        AppData.NFTsLoaded += NFTsLoadedHandler;
    }
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (profile != null && string.IsNullOrEmpty(profile.Utxo))
            NFTsLoadedHandler(null, null);
          
    }

    public void NFTsLoadedHandler(object sender, EventArgs e)
    {
        var prof = AppData.ProfilesNFTs.FirstOrDefault();
        if (prof != null)
            profile = prof;
            
        StateHasChanged();
    }
    
}
