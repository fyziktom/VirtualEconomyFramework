@using VEDriversLite
@using VEDriversLite.NFT
@using VEDriversLite.NFT.Dto
@using VEBlazor.Demo.AI.LanguageImproverForAI
@using VEDriversLite.StorageDriver.StorageDrivers
@inject AppData AppData

<ThemeProvider Theme="@theme">
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(VEBlazor.Demo.AI.LanguageImproverForAI.Shared.MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(VEBlazor.Demo.AI.LanguageImproverForAI.Shared.MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
    <VEFramework.VEBlazor.Components.VEBlazorServicesComponents />
</ThemeProvider>

@code {
    Theme theme = VEFramework.VEBlazor.Models.Themes.DefaultTheme.GetDefaultTheme();

    protected override async Task OnInitializedAsync()
    {
        AppData.AppName = "LanguageImproverForAI";
        AppData.AppNick = "LIFAI";
        AppData.AppHomeWebsiteUrl = "https://about.ve-nft.com/";
        AppData.AppShareNFTUrl = "https://apptest.ve-nft.com/";
        AppData.AllowWorkTabs = false;
        AppData.AllowSend = true;
        AppData.AllowDestroy = true;
        AppData.DisplayGettingStartedMenuItem = true;
        AppData.GettingStartedPageName = "gettingstarted";
        AppData.AppTokenId = VEDriversLite.NFT.NFTHelpers.TokenId;

        VEDriversLite.StorageDriver.Helpers.IPFSHelpers.GatewayURL = "https://ve-framework.com/ipfs/"; //veframework public gateway
                                                                                                       //VEDriversLite.StorageDriver.Helpers.IPFSHelpers.GatewayURL = "https://ipfs.io/ipfs/"; //public gateway

        var res = await VEDLDataContext.Storage.AddDriver(new VEDriversLite.StorageDriver.StorageDrivers.Dto.StorageDriverConfigDto()
            {
                Type = "IPFS",
                Name = "BDP",
                Location = "Cloud",
                ID = "BDP",
                IsPublicGateway = true,
                IsLocal = false,
                ConnectionParams = new StorageDriverConnectionParams()
                {
                    APIUrl = "https://ve-framework.com/",
                    APIPort = 443,
                    Secured = false,
                    GatewayURL = "https://ve-framework.com/ipfs/",
                    GatewayPort = 443,
                }
            });

        AppData.MintingTabsData.TryAdd("postminting", new MintingTabData()
            {
                MintingNFTType = NFTTypes.Post,
                HeaderLabel = "Add New Post",
                MenuButonLabel = "New Post",
                TabPageLocationName = "addnewpost",
                NFT = new PostNFT(""),
            });

        AppData.AllowedNFTTypes = new List<VEDriversLite.NFT.NFTTypes>()
        {
            VEDriversLite.NFT.NFTTypes.Post,
        };

        AppData.DefaultTags.Add("NeedReview", new VEDriversLite.NFT.Tags.Tag()
            {
                Name = "NeedReview",
                Color = "warning",
                UseAsFastButton = true
            });
        AppData.DefaultTags.Add("Nature", new VEDriversLite.NFT.Tags.Tag()
            {
                Name = "Nature",
                Color = "success",
                UseAsFastButton = true
            });
        AppData.DefaultTags.Add("Curacao", new VEDriversLite.NFT.Tags.Tag()
            {
                Name = "Curacao",
                Color = "success",
                UseAsFastButton = true
            });
        AppData.DefaultTags.Add("ChatGPT", new VEDriversLite.NFT.Tags.Tag()
            {
                Name = "ChatGPT",
                Color = "success",
                UseAsFastButton = true
            });
        AppData.DefaultTags.Add("OpenAI", new VEDriversLite.NFT.Tags.Tag()
            {
                Name = "OpenAI",
                Color = "success",
                UseAsFastButton = true
            });
        AppData.DefaultTags.Add("OpenSource", new VEDriversLite.NFT.Tags.Tag()
            {
                Name = "OpenSource",
                Color = "success",
                UseAsFastButton = true
            });

        await base.OnInitializedAsync();
    }
}
