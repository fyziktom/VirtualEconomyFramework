@using VEDriversLite
@using VEDriversLite.NFT
@using VEDriversLite.NFT.Dto
@using VEDriversLite.StorageDriver
@using Newtonsoft.Json
@using VEDriversLite.AI.OpenAI.Dto;
@inject HttpClient Http
@inject NavigationManager Navigator

@page "/lessons"

<PageTitle>Lekce</PageTitle>

<Row Flex="Flex.AlignItems.Center" Margin="Margin.Is2.FromTop">
    <Column>
        <Span>Zde můžete najít 20 posledních lekcí Španělštiny:</Span>
    </Column>
</Row>

@if (NFTs.Count > 0)
{
    @foreach(var NFT in NFTs)
    {
        <Row>
            <Column>

                <Card Margin="Margin.Is1.FromTop">
                    <CardBody Width="Width.Is100">
                        <CardTitle Size=" 3">@NFT.Name</CardTitle>
                        <Row Flex="Flex.AlignItems.Center" Margin="Margin.Is1.FromTop">
                            <Column>
                                <small><b>Autor:</b> @NFT.Author</small>
                            </Column>
                        </Row>
                        <Row Flex="Flex.AlignItems.Center" Margin="Margin.Is2.FromTop">
                            <Column>
                                <Span><b>Popis:</b></Span>
                            </Column>
                        </Row>

                        <Row Flex="Flex.AlignItems.Center" Margin="Margin.Is1.FromTop">
                            <Column>
                                <Span>@NFT.Description</Span>
                            </Column>
                        </Row>

                        <Row Flex="Flex.AlignItems.Center" Margin="Margin.Is2.FromTop">
                            <Column>
                                <Span><b>Tagy:</b></Span>
                            </Column>
                        </Row>
                        <Row Flex="Flex.AlignItems.Center" Margin="Margin.Is1.FromTop">
                            <Column>
                                <VEFramework.VEBlazor.Components.Tags.Tags NFTType="@NFTTypes.Post" TagsList="@NFT.TagsList" />
                            </Column>
                        </Row>

                        <Row Flex="  Flex.AlignItems.Center" Margin="Margin.Is1.FromTop">
                            <Column>
                                @if(NFT.Text.Length > 160)
                                {
                                    <VEFramework.VEBlazor.Components.NFTs.Common.NFTText Text="@(NFT.Text.Substring(0, 160) + "...")" />
                                }
                                else
                                {
                                    <VEFramework.VEBlazor.Components.NFTs.Common.NFTText Text="@NFT.Text" />
                                }
                            </Column>
                        </Row>
                        <Row Flex="Flex.AlignItems.Center" Margin="Margin.Is2.FromTop">
                            <Column>
                                <Button Type="ButtonType.Link" To="@("/search?txid=" + NFT.Utxo + "&index=0")" Target="Target.Blank">Celá lekce</Button>
                            </Column>
                        </Row>
                    </CardBody>
                </Card>

            </Column>
        </Row>
    }
}

@code{

    List<PostNFT> NFTs = new List<PostNFT>();

    bool LoadingNFT = false;

    protected override async Task OnAfterRenderAsync(bool firstLoad)
    {
        //if (firstLoad)
            await LoadNFT();
    }

    private async Task LoadNFT()
    {
        LoadingNFT = true;
        await InvokeAsync(StateHasChanged);

        var result = await Http.GetAsync("/api/GetLastLessons");
        if (result.StatusCode == System.Net.HttpStatusCode.OK)
        {
            var returnStr = await result.Content.ReadAsStringAsync();

            try
            {
                var nfts = JsonConvert.DeserializeObject<List<PostNFT>>(returnStr);
                if (nfts != null)
                    NFTs = nfts;
            }
            catch(Exception ex)
            {
                Console.WriteLine("Cannot deserialize the NFT list: " + ex.Message);      
            }
        }

        LoadingNFT = false;
        await InvokeAsync(StateHasChanged);
    }

}