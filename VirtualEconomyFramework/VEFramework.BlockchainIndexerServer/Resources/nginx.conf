
# limit number of connections per IP
limit_req_zone $binary_remote_addr zone=bis_api_limit:10m rate=500r/m;
limit_req_zone $binary_remote_addr zone=ipfs_upload_limit:10m rate=20r/m;

server {
        # listen on HTTPS
        listen 443 ssl;
        listen [::]:443 ssl;
        # Add certificates for ssl for the domain
        ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN_NAME/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN_NAME/privkey.pem; # managed by Certbot

        server_name YOUR_DOMAIN;

	    client_max_body_size 50M;

        # redirect Neblio node RPC requests
        # if server is under domain with ssl it needs to be here attached to some location in this server
        location /node {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP 127.0.0.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;	   
            proxy_pass http://127.0.0.1:6326/;
            proxy_cache_bypass $http_upgrade;
            allow all;
        }

        # IPFS POST Command for upload item with API
        location /api/v0/add {
           limit_req zone=ipfs_upload_limit burst=50 nodelay;
           if ($request_method = 'OPTIONS') {
	              add_header 'Access-Control-Allow-Origin' '*' always;
	              #add_header 'Access-Control-Allow-Credentials' 'true' always;
	              add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive,  Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
	              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	              add_header 'Access-Control-Max-Age' 1728000;
	              add_header 'Content-Type' 'text/plain; charset=utf-8';
	              add_header 'Content-Length' 0;
	              return 204;
	       }
	    
              add_header 'Access-Control-Allow-Origin' '*' always;
              add_header 'Access-Control-Allow-Credentials' 'true' always;
              add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive, Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
	          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               
	          proxy_pass http://localhost:5001;
	          proxy_hide_header 'Access-Control-Allow-Origin';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              allow all;
	    
        }

        # IPFS POST Command for obtain item with API
        location /api/v0/cat {
	    if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Accept ,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
           }

            proxy_pass http://localhost:5001;
            proxy_hide_header 'Access-Control-Allow-Origin';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            allow all;
        }

        # IPFS GET commands
        location /ipfs {
           add_header 'Access-Control-Allow-Origin' '*' always;

           if ($request_method = 'OPTIONS') {
		        add_header 'Access-Control-Allow-Credentials' 'true' always;
		        add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive,  Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
		        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		        add_header 'Access-Control-Max-Age' 1728000;
		        add_header 'Content-Type' 'text/plain; charset=utf-8';
		        add_header 'Content-Length' 0;
                return 204;
           }

	       add_header 'Access-Control-Allow-Credentials' 'true' always;
	       add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive,  Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

	       proxy_pass http://YOUR_SERVER_IP:8080;
	       proxy_hide_header 'Access-Control-Allow-Origin';
           proxy_hide_header 'Origin';
	       proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }

        # commands for the BlockchainIndexerServer API
	    # POST commands
        location ~* ^/api/(BroadcastTransaction|CreateNotSignedTokenTransaction|CreateNotSignedIssueTransaction) {
              if ($request_method = 'OPTIONS') {
		  add_header 'Access-Control-Allow-Origin' '*' always;
		  add_header 'Access-Control-Allow-Credentials' 'true' always;
		  add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive,  Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
		  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		  add_header 'Access-Control-Max-Age' 1728000;
		  add_header 'Content-Type' 'text/plain; charset=utf-8';
		  add_header 'Content-Length' 0;
		  return 204;
		}
	
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive, Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			   
		proxy_pass http://localhost:5000;
		proxy_hide_header 'Access-Control-Allow-Origin';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		allow all;

        }
	    # GET commands
        location / {
          limit_req zone=bis_api_limit burst=2000 nodelay;

          add_header 'Access-Control-Allow-Origin' '*' always;

          if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '$http_origin' always;
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS, POST, PUT' always;
                return 204;
          }
          
           proxy_pass http://localhost:5000;
           proxy_hide_header 'Access-Control-Allow-Origin';
           proxy_set_header Host $host;
           proxy_cache_bypass $http_upgrade;
        }

        # process path for the ssl certificates certbot generator
        location ^~ /.well-known/acme-challenge {
           allow all;
           root /var/www/certbot;
        }
}

# Certbot
server {
    if ($host = ve-framework.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80 default_server;
    listen [::]:80 default_server;

    server_name ve-framework.com;
    return 404; # managed by Certbot


}
