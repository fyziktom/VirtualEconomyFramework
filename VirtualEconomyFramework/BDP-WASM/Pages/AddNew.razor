@using VEDriversLite.NFT
@using VEDriversLite.NFT.Imaging.Xray
@using VEBlazor.Components.Minting
@using VEBlazor.Components.NFTs.Imaging.Xray
@inject AppData AppData

@page "/addnew"

<PageTitle>BDP - Add New Data</PageTitle>

<VEBlazor.Components.PageHeader Title="Add New Data" BreadcrumbItems="@(new string[] { "BDP", "Add New Data" })" />

<VEBlazor.Pages.AddNew NFT="@AppData.NFTInMintingForm" NFTType="@NFTTypes.XrayImage" Address="@AppData.Account.Address" >
    <SpecificParamsStepHeader>
        Xray
    </SpecificParamsStepHeader>
    <SpecificParamsStepContent>
    @if (AppData.NFTInMintingForm.Type == NFTTypes.XrayImage)
    {
        <Row>
            <Column>
                <Button Color="Color.Primary" Clicked="() => loadNFTFromTemplate.Show()" Block>Load from template</Button>
                <LoadNFTFromTemplate @ref="loadNFTFromTemplate" OnLoadNFTTemplate="@onLoadNFTTemplateHandler" />
            </Column>
        </Row>
      <Row>
            <Column>
                <XrayExposureParamsForm @bind-Voltage="@((AppData.NFTInMintingForm as XrayImageNFT).XrayParams.Voltage)"
                                        @bind-Current="@((AppData.NFTInMintingForm as XrayImageNFT).XrayParams.Current)"
                                        @bind-Time="@((AppData.NFTInMintingForm as XrayImageNFT).XrayParams.ExposureTime)" />
            </Column>
        </Row>
    }
    </SpecificParamsStepContent>
</VEBlazor.Pages.AddNew>

@code {
    
    LoadNFTFromTemplate loadNFTFromTemplate;

    async Task onLoadNFTTemplateHandler(INFT nft)
    {
        if (nft != null)
        {
            await AppData.NFTInMintingForm.Fill(nft);
            StateHasChanged();
        }
    }
}