@using VEDriversLite
@using VEDriversLite.NFT
@inject AppData AppData

<Container Fluid>
    <Row Margin="Margin.Is4.FromTop" Width="Width.Is100">
        <Column Flex="Flex.AlignContent.Center">
            <Heading Size="HeadingSize.Is5">
                <Tooltip Inline Text="@(bookmark.Item1 ? (MarkupString)"Bookmark Name:<br />" + bookmark.Item2.Name + (MarkupString)"<br /><br /> Note:<br />" + bookmark.Item2.Note : "This tab is not in bookmark. You can add it by click to the star icon.")" Placement="TooltipPlacement.Bottom">
                    <Span Margin="Margin.Is3.FromEnd">
                        Loaded Address: @(bookmark.Item1 ? (bookmark.Item2.Name + " - " + NeblioTransactionHelpers.ShortenAddress(bookmark.Item2.Address)) : this.Address)
                    </Span>
                </Tooltip>
                <Tooltip Inline Text="@(bookmark.Item1 ? "Remove from bookmarks." : "Add to bookmarks")" Placement="TooltipPlacement.Bottom">
                    <Span Margin="Margin.Is1.FromBottom">
                        <BookmarkIcon Address="@Address"
                                      IsInBookmarks="AppData.Account.IsInTheBookmarks(Address).Item1"
                                      BookmarkChanged="@StateHasChanged" />
                    </Span>
                </Tooltip>
            </Heading>
        </Column>
    </Row>

    <Row Margin="Margin.Is2.FromTop" Flex="Flex.AlignContent.Center">
        <Column>
            <NFTCardList Address="@Address"
                         IsSubAccount="@IsSubAccount"
                         IsOwnNFT="@IsOwnNFT"
                         OpenNFTsInWorkTab="async (e) => await OpenNFTsInWorkTab.InvokeAsync(e)" />
        </Column>
    </Row>
</Container>
@code {
    [Parameter]
    public string Address { get; set; } = string.Empty;
    [Parameter]
    public EventCallback<string> AddressChanged { get; set; }
    [Parameter]
    public bool IsSubAccount { get; set; } = false;
    [Parameter]
    public EventCallback<bool> IsSubAccountChanged { get; set; }
    [Parameter]
    public bool IsOwnNFT { get; set; } = false;
    [Parameter]
    public EventCallback<bool> IsOwnNFTChanged { get; set; }
    [Parameter]
    public EventCallback<List<INFT>> OpenNFTsInWorkTab { get; set; }

    private (bool, VEDriversLite.Bookmarks.Bookmark) bookmark = (false, new VEDriversLite.Bookmarks.Bookmark());

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        bookmark = AppData.Account.IsInTheBookmarks( Address );
    }
}
