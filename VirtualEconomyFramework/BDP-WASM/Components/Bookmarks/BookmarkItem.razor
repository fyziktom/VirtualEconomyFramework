@using VEDriversLite.Bookmarks
@if ( InputBookmark != null && !string.IsNullOrEmpty( InputBookmark.Name ) )
{
    <Row>
        <Column ColumnSize="ColumnSize.Is1">
            <Icon Name="IconName.Edit" IconSize="IconSize.Default" Clicked="@EditBookmarkHandler" Margin="Margin.Is2.FromEnd" />
        </Column>
        <Column>
            <Field>
                <FieldLabel>
                    @InputBookmark.Name
                </FieldLabel>
                <Span>
                    @InputBookmark.Address
                </Span>
                <FieldHelp>
                    @InputBookmark.Note
                </FieldHelp>
            </Field>
        </Column>
        <Column ColumnSize="ColumnSize.Is1">
            <Icon Name="IconName.Delete" IconSize="IconSize.Default" Clicked="@RemoveBookmarkHandler" Margin="Margin.Is2.FromStart" />
        </Column>
    </Row>
}

@if ( InputBookmark != null )
{
    <BookmarkIcon @ref="bookmarkIcon"
              Address="@InputBookmark.Address"
              HideIcon="true"
              IsEditing="true"
              NewBookmark="@InputBookmark"
              BookmarkChanged="BookmarkChangedHandler" />
}

@code {

    [Parameter]
    public Bookmark InputBookmark { get; set; } = new Bookmark();
    [Parameter]
    public EventCallback<Bookmark> InputBookmarkChanged { get; set; }

    private BookmarkIcon bookmarkIcon;

    private async Task BookmarkChangedHandler()
    {
        await InputBookmarkChanged.InvokeAsync( InputBookmark );
        StateHasChanged();
    }

    private async Task EditBookmarkHandler()
    {
        await bookmarkIcon.ShowAddBookmarkModal();
    }

    private async Task RemoveBookmarkHandler()
    {
        await bookmarkIcon.RemoveBookmark();
    }

}
