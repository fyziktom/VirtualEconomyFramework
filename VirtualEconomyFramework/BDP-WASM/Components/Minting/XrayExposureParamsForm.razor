<Card Margin="Margin.Is4.FromBottom">
    <CardHeader>
        <CardTitle>Information about the exposure / capture of the data</CardTitle>
    </CardHeader>
    <CardBody>
        <Field>
            <FieldLabel>Please enter the Anode Voltage in kilo Volts.</FieldLabel>
            <Slider TValue="double" Min="10" Max="100" Step="0.1" Value="@_voltage" ValueChanged="@voltageChanged" /> @_voltage kV
            <FieldHelp>This is the Voltage in the Xray tube.</FieldHelp>                
        </Field>
        <Field>
            <FieldLabel>Please enter the Anode Current in mili Ampers.</FieldLabel>
            <Slider TValue="double" Min="0.01" Max="100" Step="0.01" Value="@_current" ValueChanged="@currentChanged" /> @_current mA
            <FieldHelp>This is the Current in the Xray tube.</FieldHelp>            
        </Field>
        <Field>
            <FieldLabel>Please enter the Exposure time in miliseconds.</FieldLabel>
            <Slider TValue="double" Min="10" Max="10000" Step="10" Value="@_time" ValueChanged="@timeChanged" /> @_time ms
            <FieldHelp>Time of the exposure of one image</FieldHelp>            
        </Field>
    </CardBody>
</Card>

@code {
    double _voltage = 0.0;
    [Parameter]
    public double Voltage { get => _voltage; set => _voltage = value; }
    [Parameter]
    public EventCallback<double> VoltageChanged { get; set; }
    
    double _current = 0.0;
    [Parameter]
    public double Current { get => _current; set => _current = value; }
    [Parameter]
    public EventCallback<double> CurrentChanged { get; set; }

    double _time = 0.0;
    [Parameter]
    public double Time { get => _time; set => _time = value; }
    [Parameter]
    public EventCallback<double> TimeChanged { get; set; }    
    
    async Task voltageChanged(double e)
    {
        await VoltageChanged.InvokeAsync(e);
    }
    async Task currentChanged(double e)
    {
        await CurrentChanged.InvokeAsync(e);
    }
    async Task timeChanged(double e)
    {
        await TimeChanged.InvokeAsync(e);
    }

}
