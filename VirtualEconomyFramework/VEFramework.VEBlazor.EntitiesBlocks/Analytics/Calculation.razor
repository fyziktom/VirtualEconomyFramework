@inject AppData AppData

<Card Margin="Margin.Is4.FromBottom">

    <CardHeader><CardTitle>Výpočet</CardTitle></CardHeader>
    <CardBody>
        <Row>
            <Field>
                <FieldLabel>Rozpočet</FieldLabel>
                <Addons>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Placeholder="Rozpočet" />
                    </Addon>
                    <Addon AddonType="AddonType.End">
                        <AddonLabel VerticalAlignment="VerticalAlignment.Baseline">Kč</AddonLabel>
                    </Addon>
                </Addons>

            </Field>
        </Row>
        <Row>
            <Field>
                <FieldLabel>Úroková sazba</FieldLabel>
                <Addons>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Placeholder="Úroková sazba" />
                    </Addon>
                    <Addon AddonType="AddonType.End">
                        <AddonLabel>%</AddonLabel>
                    </Addon>
                </Addons>

            </Field>
        </Row>
        <Row>
            <Table Hoverable>
                <TableHeader>
                    <TableRow>
                        <TableHeaderCell>Místa</TableHeaderCell>
                        <TableHeaderCell>Povoleno</TableHeaderCell>
                        <TableHeaderCell>AK</TableHeaderCell>
                        <TableHeaderCell>Bilance</TableHeaderCell>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    @if (CalculationEntities != null)
                    {
                        @foreach (var entity in CalculationEntities)
                        {
                            <TableRow>
                            <TableRowCell>
                            
                                    <Span style="@($"padding-left: {entity.Depth}rem")"></Span>
                                    @if (entity.IsLeading)
                                    {
                                        <Span Padding="Padding.Is1" Background="Background.Info">
                                            <Icon Name="@(entity.Icon)"/>
                                        </Span>
                                    }
                                    else
                                    {
                                        <Span Padding="Padding.Is1">
                                            <Icon Name="@(entity.Icon)"/>
                                        </Span>
                                    }
                                    <Span>@entity.Name</Span>
                                </TableRowCell>
                                <TableRowCell>
                                    <Check TValue="bool" CheckedChanged="b => SetEntitySelected(entity, b)" Checked="@entity.IsSelected"/>
                                </TableRowCell>
                                <TableRowCell>
                                    <Div Style="width: 100px;">
                                        <Field>
                                            <Addons>
                                                <Addon AddonType="AddonType.Body">
                                                    <TextEdit/>
                                                </Addon>
                                                <Addon AddonType="AddonType.End">
                                                    <AddonLabel>%</AddonLabel>
                                                </Addon>
                                            </Addons>
                                        </Field>
                                    </Div>
                                </TableRowCell>
                                <TableRowCell>1000Kč</TableRowCell>
                            </TableRow>
                        }
                    }
                    <TableRow>
                        <TableRowCell> <Icon Name="@("fa-city")"/> Název</TableRowCell>
                        <TableRowCell><Check TValue="bool"></Check></TableRowCell>
                        <TableRowCell>
                            <Div Style="width: 100px;">
                                <Field>
                                    <Addons>
                                        <Addon AddonType="AddonType.Body">
                                            <TextEdit/>
                                        </Addon>
                                        <Addon AddonType="AddonType.End">
                                            <AddonLabel>%</AddonLabel>
                                        </Addon>
                                    </Addons>
                    
                                </Field>
                            </Div>
                        </TableRowCell>
                        <TableRowCell>1000Kč</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>
                            <Span Padding="Padding.Is4.FromStart">
                                <Icon Name="@("fa-building")"/> Název
                            </Span>
                        </TableRowCell>
                        <TableRowCell><Check TValue="bool"></Check></TableRowCell>
                        <TableRowCell>
                            <Div Style="width: 100px;">
                                <Field>
                                    <Addons>
                                        <Addon AddonType="AddonType.Body">
                                            <TextEdit/>
                                        </Addon>
                                        <Addon AddonType="AddonType.End">
                                            <AddonLabel>%</AddonLabel>
                                        </Addon>
                                    </Addons>

                                </Field>
                            </Div>
                        </TableRowCell>
                        <TableRowCell>1000Kč</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowCell>
                            <Span Padding="Padding.Is4.FromStart">
                                <Icon Name="@("fa-building")"/> Název
                            </Span>
                        </TableRowCell>
                        <TableRowCell><Check TValue="bool"></Check></TableRowCell>
                        <TableRowCell>
                            <Div Style="width: 100px;">
                                <Field>
                                    <Addons>
                                        <Addon AddonType="AddonType.Body">
                                            <TextEdit/>
                                        </Addon>
                                        <Addon AddonType="AddonType.End">
                                            <AddonLabel>%</AddonLabel>
                                        </Addon>
                                    </Addons>

                                </Field>
                            </Div>
                        </TableRowCell>
                        <TableRowCell>1000Kč</TableRowCell>
                    </TableRow>
                </TableBody>
            </Table>
        </Row>
    </CardBody>
</Card>

@code {
    [Parameter]
    public string RootItemId { get; set; }
    
    private List<CalculationEntity>? CalculationEntities { get; set; }
    
    protected override void OnParametersSet()
    {
        if (RootItemId != rootItemId)
        {
            rootItemId = RootItemId;
            LoadData();
        }
        base.OnParametersSet();
    }

    private void LoadData()
    {
        var root = AppData.EntitiesHandler.GetTree(rootItemId);
        CalculationEntities = new List<CalculationEntity>();

        AddItemToList(root);
    }

    private void AddItemToList(TreeItem item, int depth = 0)
    {
        if (item.Entity is ISource {SourceType: SourceType.PVE })
        {
            CalculationEntities.Last().IsLeading = true;
        }
        
        CalculationEntities.Add(new CalculationEntity
        {
            Name = item.Name,
            Icon = GetIcon(item),
            Depth = depth,
            Entity = item.Entity
        });

        var children = item.GetChilds();
        foreach (var child in children)
        {
            AddItemToList(child, depth + 1);
        }
        StateHasChanged();
    }
    
    private String GetIcon(TreeItem item)
    {
        if (item.Entity is ISource sourceItem)
        {
            switch (sourceItem.SourceType)
            {
                case SourceType.Battery: return "fa-battery-full";
                case SourceType.PowerGridSupplier: return "fa-bolt";
                case SourceType.PVE: return "fa-solar-panel";
            }

        }
        else if (item.Entity is IConsumer consumerItem)
        {
            switch (consumerItem.ConsumerType)
            {
                case ConsumerType.GroupNetwork: return "fa-city";
                case ConsumerType.DevicesGroup: return "fa-building";
                case ConsumerType.Device: return "fa-table";
            }
        }
        return "fa-diamond";
    }

    private string rootItemId;
    
    
    public class CalculationEntity
    {
        public string? Name { get; set; }
        public string Icon { get; set; }
        public int Depth { get; set; }
        public bool IsLeading { get; set; }
        public IEntity Entity { get; set; }
        public bool IsSelected { get; set; }
        public double ResultCostsBefore { get; set; }
        public double ResultCostsAfter { get; set; }
    }

    private void SetEntitySelected(CalculationEntity item, bool b)
    {
        item.IsSelected = b;
    }

}