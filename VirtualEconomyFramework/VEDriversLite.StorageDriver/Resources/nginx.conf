server {

	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	ssl_certificate /etc/letsencrypt/live/ve-framework.com/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/ve-framework.com/privkey.pem; # managed by Certbot

	root /usr/share/nginx/html;

	index index.html index.htm index.nginx-debian.html;

	server_name ve-framework.com;

	client_max_body_size 10M;

	location /api/v0/add {
	   if ($request_method = 'OPTIONS') {
		  add_header 'Access-Control-Allow-Origin' '*' always;
		  add_header 'Access-Control-Allow-Credentials' 'true' always;
		  add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive,  Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
		  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		  add_header 'Access-Control-Max-Age' 1728000;
		  add_header 'Content-Type' 'text/plain; charset=utf-8';
		  add_header 'Content-Length' 0;
		  return 204;
		}
	
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive, Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			   
		proxy_pass http://localhost:5001;
		proxy_hide_header 'Access-Control-Allow-Origin';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		allow all;
	}

	location /api/v0/cat {
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Credentials' 'true' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Accept ,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain charset=UTF-8';
			add_header 'Content-Length' 0;
			return 204;
		}

		proxy_pass http://localhost:5001;
		proxy_hide_header 'Access-Control-Allow-Origin';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		allow all;
	}

   
	location /ipfs {
		add_header 'Access-Control-Allow-Origin' '$http_origin' always;
	 
		proxy_pass http://localhost:8080;
		proxy_hide_header 'Access-Control-Allow-Origin';
		proxy_hide_header 'Origin';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		#allow all;
	}

	location ~* ^/api/(BroadcastTransaction|CreateNotSignedTokenTransaction|CreateNotSignedIssueTransaction) {
	   if ($request_method = 'OPTIONS') {
		  add_header 'Access-Control-Allow-Origin' '*' always;
		  add_header 'Access-Control-Allow-Credentials' 'true' always;
		  add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive,  Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
		  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		  add_header 'Access-Control-Max-Age' 1728000;
		  add_header 'Content-Type' 'text/plain; charset=utf-8';
		  add_header 'Content-Length' 0;
		  return 204;
		}
	
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;
		add_header 'Access-Control-Allow-Headers' 'Accept, Keep-Alive, Origin, X-Requested-With, Content-Range, X-Chunked-Output, X-Stream-Output, Content-Type' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			   
		proxy_pass http://localhost:5000; #5000 for BlockchainIndexerServer
		proxy_hide_header 'Access-Control-Allow-Origin';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		allow all;
	}

	#5000 for BlockchainIndexerServer
	location / {
		add_header 'Access-Control-Allow-Origin' '$http_origin' always;
	 
		proxy_pass http://localhost:5000;
		proxy_hide_header 'Access-Control-Allow-Origin';
		proxy_hide_header 'Origin';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		#allow all;
	}

	location ^~ /.well-known/acme-challenge {
	   allow all; 
	   root /var/www/certbot;
	}
}

server {
    if ($host = ve-framework.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80 default_server;
        listen [::]:80 default_server;

        server_name ve-framework.com;
    return 404; # managed by Certbot


}